import csv
from faker import Faker

# Generates a total of 14000000 rows of 400 columns of data in a single CSV

fake = Faker()

def single_csv():
    print("Single CSV running");
    f = open('./BigDATA.csv', 'w+')
    writer = csv.writer(f)
    for i in range(14000000):
        row = [fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.name().split()[0], fake.name().split()[1], fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address(),fake.address() ]
        writer.writerow(row)
        print("Currently in row: {}".format(i))
    f.close()

if __name__ == '__main__':
    single_csv()
    print("Single CSV Made Finally!!!")